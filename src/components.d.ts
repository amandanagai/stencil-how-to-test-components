/* tslint:disable */
/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */


import '@stencil/core';


import {
  EventEmitter,
} from '@stencil/core';


export namespace Components {

  interface TestingClickEvent {}
  interface TestingClickEventAttributes extends StencilHTMLAttributes {}

  interface TestingEventEmitter {}
  interface TestingEventEmitterAttributes extends StencilHTMLAttributes {
    'onSomethingHappened'?: (event: CustomEvent<SomethingHappened>) => void;
  }

  interface TestingMethods {
    'incrementCount': () => void;
  }
  interface TestingMethodsAttributes extends StencilHTMLAttributes {}

  interface TestingProps {
    'first': string;
    'last': string;
  }
  interface TestingPropsAttributes extends StencilHTMLAttributes {
    'first'?: string;
    'last'?: string;
  }

  interface TestingRender {}
  interface TestingRenderAttributes extends StencilHTMLAttributes {}

  interface TestingUpdatesAriaProperty {}
  interface TestingUpdatesAriaPropertyAttributes extends StencilHTMLAttributes {}

  interface UsingSnapshots {
    'first': string;
    'last': string;
  }
  interface UsingSnapshotsAttributes extends StencilHTMLAttributes {
    'first'?: string;
    'last'?: string;
  }
}

declare global {
  interface StencilElementInterfaces {
    'TestingClickEvent': Components.TestingClickEvent;
    'TestingEventEmitter': Components.TestingEventEmitter;
    'TestingMethods': Components.TestingMethods;
    'TestingProps': Components.TestingProps;
    'TestingRender': Components.TestingRender;
    'TestingUpdatesAriaProperty': Components.TestingUpdatesAriaProperty;
    'UsingSnapshots': Components.UsingSnapshots;
  }

  interface StencilIntrinsicElements {
    'testing-click-event': Components.TestingClickEventAttributes;
    'testing-event-emitter': Components.TestingEventEmitterAttributes;
    'testing-methods': Components.TestingMethodsAttributes;
    'testing-props': Components.TestingPropsAttributes;
    'testing-render': Components.TestingRenderAttributes;
    'testing-updates-aria-property': Components.TestingUpdatesAriaPropertyAttributes;
    'using-snapshots': Components.UsingSnapshotsAttributes;
  }


  interface HTMLTestingClickEventElement extends Components.TestingClickEvent, HTMLStencilElement {}
  var HTMLTestingClickEventElement: {
    prototype: HTMLTestingClickEventElement;
    new (): HTMLTestingClickEventElement;
  };

  interface HTMLTestingEventEmitterElement extends Components.TestingEventEmitter, HTMLStencilElement {}
  var HTMLTestingEventEmitterElement: {
    prototype: HTMLTestingEventEmitterElement;
    new (): HTMLTestingEventEmitterElement;
  };

  interface HTMLTestingMethodsElement extends Components.TestingMethods, HTMLStencilElement {}
  var HTMLTestingMethodsElement: {
    prototype: HTMLTestingMethodsElement;
    new (): HTMLTestingMethodsElement;
  };

  interface HTMLTestingPropsElement extends Components.TestingProps, HTMLStencilElement {}
  var HTMLTestingPropsElement: {
    prototype: HTMLTestingPropsElement;
    new (): HTMLTestingPropsElement;
  };

  interface HTMLTestingRenderElement extends Components.TestingRender, HTMLStencilElement {}
  var HTMLTestingRenderElement: {
    prototype: HTMLTestingRenderElement;
    new (): HTMLTestingRenderElement;
  };

  interface HTMLTestingUpdatesAriaPropertyElement extends Components.TestingUpdatesAriaProperty, HTMLStencilElement {}
  var HTMLTestingUpdatesAriaPropertyElement: {
    prototype: HTMLTestingUpdatesAriaPropertyElement;
    new (): HTMLTestingUpdatesAriaPropertyElement;
  };

  interface HTMLUsingSnapshotsElement extends Components.UsingSnapshots, HTMLStencilElement {}
  var HTMLUsingSnapshotsElement: {
    prototype: HTMLUsingSnapshotsElement;
    new (): HTMLUsingSnapshotsElement;
  };

  interface HTMLElementTagNameMap {
    'testing-click-event': HTMLTestingClickEventElement
    'testing-event-emitter': HTMLTestingEventEmitterElement
    'testing-methods': HTMLTestingMethodsElement
    'testing-props': HTMLTestingPropsElement
    'testing-render': HTMLTestingRenderElement
    'testing-updates-aria-property': HTMLTestingUpdatesAriaPropertyElement
    'using-snapshots': HTMLUsingSnapshotsElement
  }

  interface ElementTagNameMap {
    'testing-click-event': HTMLTestingClickEventElement;
    'testing-event-emitter': HTMLTestingEventEmitterElement;
    'testing-methods': HTMLTestingMethodsElement;
    'testing-props': HTMLTestingPropsElement;
    'testing-render': HTMLTestingRenderElement;
    'testing-updates-aria-property': HTMLTestingUpdatesAriaPropertyElement;
    'using-snapshots': HTMLUsingSnapshotsElement;
  }


  export namespace JSX {
    export interface Element {}
    export interface IntrinsicElements extends StencilIntrinsicElements {
      [tagName: string]: any;
    }
  }
  export interface HTMLAttributes extends StencilHTMLAttributes {}

}
